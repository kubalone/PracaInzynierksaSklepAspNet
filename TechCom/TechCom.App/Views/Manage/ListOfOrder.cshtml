@model TechCom.Model.Domain.ViewModels.OrderListViewModel
@{
    ViewBag.Title = "ListOfOrder";
    Layout = "~/Views/Shared/_ManageLayout.cshtml";
}
@using PagedList.Mvc;
@using PagedList;
<div class="panel-body">
    <div class="containerManagment">

        @if (Model.OrderDetail.Count() <= 0)
            {
            <p class="text-center"> Nie ma żadnych zamówień</p>
        }
        else
        {

            <div class="sort  col-md-12  col-md-offset-2">
                <div class="header-middle col-md-4 ">
                    <form action="@Url.Action("ListOfOrder","Manage")" method="post">
                        <input id="SearchString" name="SearchString" type="search" placeholder="czego szukasz?" value="@ViewBag.CurrentFilter" />

                        <button type="submit">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                        <div class="clearfix"></div>
                    </form>
                </div>

                <div class="sortBy  col-md-5">
                    @using (Html.BeginForm("ListOfOrder", "Manage", new { currentFilter = ViewBag.CurrentFilter }))
                    {
                        @Html.Label("Sortuj według:   ")
                        @Html.DropDownListFor(m => m.OrderBy, Model.OrderUserList, "Najlepiej pasujące", new { onchange = "this.form.submit();" })

                    }
                </div>
            </div>
                <div class="clearfix"></div>
                <div class="table-responsive ">
                    <table class="table table-bordered">
                       
                        @foreach (var item in Model.OrderDetail)
                        {
                            <thead class="thead-table">
                                <tr id="tableTH">
                                    <th class="col-md-2">Nr zamówienia</th>
                                    <th class="col-md-2">Data zamówienia:</th>
                                    <th class="col-md-2 ">Stan zamowienia: </th>
                                    <th class="col-md-2">Dane do wysyłki:</th>
                                    <th class="col-md-3 text-center">Komentarz</th>
                                    <th class="col-md-1">Koszt zamowienia</th>
                                </tr>
                            </thead>

                            <tr @if (item.OrderStatus == TechCom.Model.Domain.Domain.OrderStatus.Nowe) { <text> class="noweZamowienie" </text> }>
                            <tr>
                                <td class="text-center">
                                    @item.ShippingID
                                </td>
                                <td>
                                    @item.DateOfTheOrder.ToString("dd-MM-yyyy")
                                </td>
                                <td id="orderStatus">
                                    <strong></strong> <br />
                                    @if (ViewBag.UserIsAdmin)
                                    {
                                        using (Html.BeginForm("ChangeOrderStatus", "Manage"))
                                        {
                                            @Html.HiddenFor(o => item.ShippingID)
                                            @Html.EnumDropDownListFor(o => item.OrderStatus, new { onchange = "this.form.submit();" })
                                            @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                                        }

                                    }
                                    else
                                    {
                                        @Html.DisplayFor(o => item.OrderStatus)
                                    }
                                </td>
                                <td>

                                    @item.Name @item.Surname <br />
                                    @item.Adress <br />
                                    @item.ZipCode <br />
                                </td>
                                <td>

                                    @item.Comments
                                </td>
                                <td>
                                    @item.ValueOfOrder zł
                                </td>
                            </tr>

                            <thead>
                                <tr class="info">
                                    <th colspan="3" class="text-center">Zamówionie produkty:</th>
                                    <th>Nazwa Produktu</th>
                                    <th class="text-center">Sztuk: </th>
                                    <th>Cena</th>

                                </tr>
                            </thead>
                        
                            @foreach (var items in item.Orders)
                            {
                               
                                <tr>
                                    <td colspan="3"></td>
                                    <td >
                                        <a href="@Url.Action("Details", "Product", new { id = items.ProductID })">@items.product.Name</a>
                                    </td>
                                    <td class="text-center" >
                                        @items.Quantity
                                    </td>
                                    <td >
                                        @(items.Quantity * items.Price) zł
                                    </td>

                                </tr>
                               
                            }
                        <tr>
                            <td colspan="6" > </td>
                        </tr>
                            </tr>
                            
                        }


                    </table>
                </div>
                @Html.PagedListPager(Model.OrderDetail, page => Url.Action("ListOfOrder", new { orderBy = Model.OrderBy, currentFilter = ViewBag.CurrentFilter, page }))
        }
    </div>
</div>





 

