@model TechCom.Model.Domain.ViewModels.OrderListViewModel
@{
    ViewBag.Title = "ListOfOrder";
}
@using PagedList.Mvc;
@using PagedList;
<h2>ListOfOrder</h2>
@if (ViewBag.UserIsAdmin)
{
    using (Html.BeginForm())
    {
        <p>
            <input id="SearchString" name="SearchString" type="search" placeholder="czego szukasz?" value="@ViewBag.CurrentFilter" />
           
            <input type="submit" value="Filter" />
        </p>
    }
}
@using (Html.BeginForm("ListOfOrder", "Manage", new { currentFilter = ViewBag.CurrentFilter }))
{

    @Html.LabelFor(m => m.OrderBy)
    @Html.DropDownListFor(m => m.OrderBy, Model.OrderUserList, "Najlepiej pasujące", new { onchange = "this.form.submit();" })

}
<div>
    <table class="table">

        @foreach (var item in Model.OrderDetail)
        {
            <thead class="thead-inverse" style="background-color:aliceblue">
                <tr>
                    <th>Numer zamówienia</th>
                    <th>Data zamówienia:</th>
                    <th>Stan zamowienia: </th>
                    <th>Dane do wysyłki:</th>
                    <th>Komentarz</th>
                    <th>Koszt zamowienia</th>
                </tr>
            </thead>
            <tr @if (item.OrderStatus == TechCom.Model.Domain.Domain.OrderStatus.Nowe) { <text> class="noweZamowienie" </text>        }>
<tr>
    <td>
        @item.ShippingID
    </td>
                    <td>
                        @item.DateOfTheOrder.ToString("dd-MM-yyyy")
                    </td>
                    <td>
                        <strong></strong> <br />
                        @if (ViewBag.UserIsAdmin)
    {
        using (Html.BeginForm("ChangeOrderStatus", "Manage"))
        {
            @Html.HiddenFor(o => item.ShippingID)
                                @Html.EnumDropDownListFor(o => item.OrderStatus, new { onchange = "this.form.submit();" })
                                @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                            }

    }
                        else
                        {
                            @Html.DisplayFor(o => item.OrderStatus)
                        }
                    </td>
                    <td>

                        @item.Name @item.Surname <br />
                        @item.Adress <br />
                        @item.ZipCode <br />
                    </td>
                    <td>

                        @item.Comments
                    </td>
                    <td>

                        @item.ValueOfOrder pln
                    </td>


                </tr>
                <thead class="thead-inverse">
                    <tr>
                        <th></th>
                        <th>Nazwa Produktu</th>
                        <th>Sztuk: </th>
                        <th>Cena</th>

                    </tr>
                </thead>
                <tr>
                    <td></td>


                    @foreach (var items in item.Orders)
{

                        <td>

                            <a href="@Url.Action("Details", "Product", new { id = items.ProductID })">@items.product.Name</a>
                        </td>

                        <td>
                            @items.Quantity
                        </td>
                        <td>
                            @(items.Quantity * items.Price)
                        </td>


                  <tr>

                  </tr>


                    }
                    
                        </tr>
                  </tr>
        }
      
    </table>
   @Html.PagedListPager(Model.OrderDetail, page => Url.Action("ListOfOrder", new { orderBy = Model.OrderBy, currentFilter = ViewBag.CurrentFilter, page }))

</div>
